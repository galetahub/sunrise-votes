<%= content_for(:head) do %>
  <%= javascript_include_tag "highcharts/highcharts", "highcharts/themes/gray", "highcharts/modules/exporting" %>
<% end %>

<div class="edit-bl">
  <div class="bot-bg">
    <div id="voteable_title" class="block-title"><%= @voteable.title %></div>

    <div class="edit-cont">
      <%= link_to t('manage.sunrise.votes.view'), manage_ballot_box_votes_path( voteable_scope(@voteable) ) %>
      
      <% if @min_created_at %>
        <div style="padding-top:15px;">
          <div>MIN: <%= @min_created_at.strftime('%d.%m.%Y %H:%M') %></div>
          <div>MAX: <%= @max_created_at.strftime('%d.%m.%Y %H:%M') %></div>
        </div>
      <% end %>
    </div>
    
    <div class="edit-cont">      
      <div id="chart_dates" style="height:400px;width:800px;"></div>
    </div>
      
    <div class="edit-cont">
      <div id="chart_browsers" style="height:400px;width:800px;"></div>
    </div>
    
    <div class="edit-cont">
      <div id="chart_platforms" style="height:400px;width:800px;"></div>
    </div>
  </div>
</div>

<script type="text/javascript">
  $(document).ready(function(){
    /*  DATES */
    var dates_url = window.location.href.replace('/charts', '/dates_browsers');
    var dates_chart = null;
		var dates_options = {
			chart: { renderTo: 'chart_dates' },
			title: { text: $('#voteable_title').text() + " dates" },
			subtitle: { text: 'Source: BallotBox' },
			
			xAxis: {
				type: 'datetime',
				tickInterval: 7 * 24 * 3600 * 1000, // one week
				tickWidth: 0,
				gridLineWidth: 1,
				labels: {
					align: 'left',
					x: 3,
					y: -3 
				}
			},
			
			yAxis: [{ // left y axis
				title: { text: null },
				labels: {
					align: 'left',
					x: 3,
					y: 16,
					formatter: function() {
						return Highcharts.numberFormat(this.value, 0);
					}
				},
				showFirstLabel: false
			}, { // right y axis
				linkedTo: 0,
				gridLineWidth: 0,
				opposite: true,
				title: {
					text: null
				},
				labels: {
					align: 'right',
					x: -3,
					y: 16,
					formatter: function() {
						return Highcharts.numberFormat(this.value, 0);
					}
				},
				showFirstLabel: false
			}],
			
			legend: {
				align: 'left',
				verticalAlign: 'top',
				y: 20,
				floating: true,
				borderWidth: 0
			},
			
			tooltip: {
				shared: true,
				crosshairs: true
			},
			
			plotOptions: {
				series: {
					cursor: 'pointer',
					point: {
						events: {
							click: function() {
								hs.htmlExpand(null, {
									pageOrigin: {
										x: this.pageX, 
										y: this.pageY
									},
									headingText: this.series.name,
									maincontentText: Highcharts.dateFormat('%A, %b %e, %Y', this.x) +':<br/' + '>'+ 
										this.y +' votes',
									width: 200
								});
							}
						}
					},
					marker: {
						lineWidth: 1
					}
				}
			},
			
			series: []
		};
		
		$.ajax({
      url: dates_url, dataType: "json",
      success: function(data) {
        $.each(data, function(index, value) { 
          if (index == 0) {
            value["lineWidth"] = 4;
            value["marker"] = { radius: 4 };
          }
          
          $.each(value.data, function(position, item){
            item[0] = Date.parse(item[0]);
          });
          
          dates_options.series.push( value );
        });
		
        dates_chart = new Highcharts.Chart(dates_options);
      }
    });
		
		/*  BROWSERS */
		var browsers_chart = null;
		var browsers_url = window.location.href.replace('/charts', '/browsers');
		var browsers_options = {
		  chart: {
			  renderTo: 'chart_browsers',
			  plotBackgroundColor: null,
			  plotBorderWidth: null,
			  plotShadow: false
		  },
		  title: { text: $('#voteable_title').text() + " browsers" },
		  tooltip: {
			  formatter: function() {
				  return '<b>'+ this.point.name +'</b>: '+ this.point.y;
			  }
		  },
		  plotOptions: {
			  pie: {
				  allowPointSelect: true,
				  cursor: 'pointer',
				  dataLabels: {
					  enabled: true,
					  color: '#000000',
					  connectorColor: '#000000',
					  formatter: function() {
						  return '<b>'+ this.point.name +'</b>: '+ this.percentage +' %';
					  }
				  }
			  }
		  },
	    series: [{
			  type: 'pie',
			  name: 'Browsers',
			  data: []
		  }]
		};
		
		$.ajax({
      url: browsers_url, dataType: "json",
      success: function(data) {
        $.each(data, function(index, value) { 
          browsers_options.series[0].data = value;
        });
		
        browsers_chart = new Highcharts.Chart(browsers_options);
      }
    });
		
		/*  PLATFORMS */
		var platforms_chart = null;
		var platforms_url = window.location.href.replace('/charts', '/platforms');
		var platforms_options = {
		  chart: {
			  renderTo: 'chart_platforms',
			  plotBackgroundColor: null,
			  plotBorderWidth: null,
			  plotShadow: false
		  },
		  title: { text: $('#voteable_title').text() + " platforms" },
		  tooltip: {
			  formatter: function() {
				  return '<b>'+ this.point.name +'</b>: '+ this.point.y;
			  }
		  },
		  plotOptions: {
			  pie: {
				  allowPointSelect: true,
				  cursor: 'pointer',
				  dataLabels: {
					  enabled: true,
					  color: '#000000',
					  connectorColor: '#000000',
					  formatter: function() {
						  return '<b>'+ this.point.name +'</b>: '+ this.percentage +' %';
					  }
				  }
			  }
		  },
	    series: [{
			  type: 'pie',
			  name: 'Platforms',
			  data: []
		  }]
		};
		
		$.ajax({
      url: platforms_url, dataType: "json",
      success: function(data) {
        $.each(data, function(index, value) { 
          platforms_options.series[0].data = value;
        });
		
        platforms_chart = new Highcharts.Chart(platforms_options);
      }
    });
  });
</script>
